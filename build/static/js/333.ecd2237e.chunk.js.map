{"version":3,"file":"static/js/333.ecd2237e.chunk.js","mappings":"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","sources":["routes/register/Register.jsx","../node_modules/@material-ui/icons/esm/Visibility.js","../node_modules/@material-ui/icons/esm/VisibilityOff.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Close, Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { baseUrl } from \"../../api/baseUrls\";\r\n\r\nexport default function Register() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    getValues,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [passwordsMask, setPasswordsMask] = useState({\r\n    pwd: true,\r\n    confirmPwd: true,\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    document.title = \"Sign up\";\r\n  }, []);\r\n\r\n  const onSubmit = async (data) => {\r\n    setError(false);\r\n    setIsLoading(true);\r\n    try {\r\n      await baseUrl.post(\"/auth/signup\", {\r\n        ...data,\r\n        email: data.email.toLowerCase(),\r\n      });\r\n      history.push(\"/login\");\r\n    } catch (err) {\r\n      setError(\r\n        err?.response?.data?.message || \"Something went wrong, Please try again\"\r\n      );\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-16 mx-3\">\r\n      <form\r\n        className=\"rounded-lg mx-auto px-2.5 pt-2.5 pb-4 border border-darkGray-30 max-w-112.5\"\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <div className=\"flex justify-between px-2.5 my-2\">\r\n          <span className=\"text-xl text-center font-semibold\">Register</span>\r\n          <Link to=\"/\">\r\n            <Close />\r\n          </Link>\r\n        </div>\r\n        <div className=\"mt-4\">\r\n          <TextField\r\n            type=\"name\"\r\n            label=\"Name\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            error={!!errors.username}\r\n            helperText={errors?.username?.message}\r\n            {...register(\"username\", { required: \"name is required!\" })}\r\n          />\r\n        </div>\r\n        <div className=\"mt-4\">\r\n          <TextField\r\n            type=\"email\"\r\n            fullWidth\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            error={!!errors.email}\r\n            helperText={errors?.email?.message}\r\n            {...register(\"email\", {\r\n              required: \"email is required!\",\r\n              pattern: {\r\n                value:\r\n                  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                message: \"Please enter a valid email.\",\r\n              },\r\n            })}\r\n          />\r\n        </div>\r\n        <div className=\"mt-4 relative\">\r\n          <div\r\n            onClick={() => setPasswordsMask((p) => ({ ...p, pwd: !p.pwd }))}\r\n            className=\"absolute top-2 cursor-pointer right-2 z-10 p-2 text-darkGray-10\"\r\n          >\r\n            {passwordsMask.pwd ? <Visibility /> : <VisibilityOff />}\r\n          </div>\r\n          <TextField\r\n            type={passwordsMask.pwd ? \"password\" : \"text\"}\r\n            fullWidth\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            error={!!errors.password}\r\n            helperText={errors?.password?.message}\r\n            {...register(\"password\", {\r\n              required: \"Password is required.\",\r\n              pattern: {\r\n                value:\r\n                  /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{7,}$/,\r\n                message:\r\n                  \"Password must include letters, numbers and special characters.\",\r\n              },\r\n              minLength: {\r\n                value: 8,\r\n                message: \"Password must be at least 8 characters.\",\r\n              },\r\n            })}\r\n          />\r\n        </div>\r\n        <div className=\"mt-4 relative\">\r\n          <div\r\n            onClick={() =>\r\n              setPasswordsMask((p) => ({ ...p, confirmPwd: !p.confirmPwd }))\r\n            }\r\n            className=\"absolute top-2 cursor-pointer right-2 z-10 p-2 text-darkGray-10\"\r\n          >\r\n            {passwordsMask.confirmPwd ? <Visibility /> : <VisibilityOff />}\r\n          </div>\r\n          <TextField\r\n            type={passwordsMask.confirmPwd ? \"password\" : \"text\"}\r\n            fullWidth\r\n            label=\"confirm password\"\r\n            variant=\"outlined\"\r\n            error={!!errors.confirmPassword}\r\n            helperText={errors?.confirmPassword?.message}\r\n            {...register(\"confirmPassword\", {\r\n              required: \"Confirm password is required.\",\r\n              validate: {\r\n                passwordEqual: (value) =>\r\n                  value === getValues().password || \"Passwords must be same.\",\r\n              },\r\n            })}\r\n          />\r\n        </div>\r\n        <div className=\"mt-5\">\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            disabled={isLoading}\r\n            style={{ color: \"white\", backgroundColor: \"#3a8fde\" }}\r\n          >\r\n            {isLoading ? (\r\n              <div className=\"h-8 w-8\">\r\n                <div className=\"circle-loader\"></div>\r\n              </div>\r\n            ) : (\r\n              \"Confirm\"\r\n            )}\r\n          </Button>\r\n        </div>\r\n        {!!error && (\r\n          <div className=\"text-red-10 text-sm mb-1.5 mt-2.5 text-center\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        <div className=\"text-center text-sm mt-1\">\r\n          Already have a account\r\n          <Link\r\n            to=\"/login\"\r\n            className=\"underline underline-offset-1 ml-1 text-[#4d4dab]\"\r\n          >\r\n            Login\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');"],"names":["Register","useForm","register","handleSubmit","getValues","errors","formState","useState","error","setError","isLoading","setIsLoading","pwd","confirmPwd","passwordsMask","setPasswordsMask","history","useHistory","useEffect","document","title","onSubmit","data","baseUrl","email","toLowerCase","push","response","message","className","to","type","label","fullWidth","variant","username","helperText","required","pattern","value","onClick","p","password","minLength","confirmPassword","validate","passwordEqual","disabled","style","color","backgroundColor","createSvgIcon","React","d"],"sourceRoot":""}